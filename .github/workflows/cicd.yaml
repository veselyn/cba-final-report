name: CI/CD

on:
  push:
    branches: ["**"]

permissions:
  contents: write
  pull-requests: write

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Install Nix
        uses: nixbuild/nix-quick-install-action@v29

      - name: Cache Nix store
        uses: nix-community/cache-nix-action@v5.2.1
        with:
          primary-key: nix-${{ runner.os }}-${{ hashFiles('**/*.nix') }}
          restore-prefixes-first-match: nix-${{ runner.os }}-
          gc-max-store-size-linux: 1073741824
          purge: true
          purge-prefixes: nix-${{ runner.os }}-
          purge-created: 0
          purge-primary-key: never

      - name: Build Artifacts
        run: nix run .#build-report

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          path: |
            ./build/*

  release:
    name: Release
    runs-on: ubuntu-latest

    needs:
      - build

    steps:
      - name: Release
        id: release
        uses: googleapis/release-please-action@v4
        with:
          release-type: simple

      - name: Download Artifacts
        if: steps.release.outputs.release_created
        uses: actions/download-artifact@v4

      - name: Upload Artifacts
        if: steps.release.outputs.release_created
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cd artifact

          gh release upload \
            -R "${{ github.repository }}" \
            "${{ steps.release.outputs.tag_name }}" \
            ./*
